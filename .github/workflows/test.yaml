name: Frontend & Backend Tests

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.4]

    name: EcomVue Frontend & Backend Test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Cache Composer Dependencies
      - name: Cache Dependencies PHP
        id: php-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: xdebug

      # Install PHP Dependencies
      - name: Install PHP dependencies
        if: steps.php-cache.outputs.cache-hit != 'true'
        run: composer install --no-interaction --no-progress --ansi

      # Prepare Laravel Environment
      - name: Prepare Laravel
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan config:clear

      # Set up Node.js for Vue
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: resources/js/client/package-lock.json

      # Cache Node modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: resources/js/client/node_modules
          key: node-modules-${{ hashFiles('resources/js/client/package-lock.json') }}

      # Install Vue Dependencies
      - name: Install Vue Dependencies
        working-directory: resources/js/client
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      # Run Laravel Tests
      - name: Test Laravel Application
        run: composer test

      # Test Vue Application
      - name: Test Vue Application
        working-directory: resources/js/client
        run: npm run test
